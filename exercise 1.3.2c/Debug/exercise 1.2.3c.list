
exercise 1.2.3c.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000015c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002f0  080002f0  00020020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002f0  080002f0  00020020  2**0
                  CONTENTS
  4 .ARM          00000000  080002f0  080002f0  00020020  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002f0  080002f0  00020020  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002f0  080002f0  000102f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002f4  080002f4  000102f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000020  20000000  080002f8  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020020  2**0
                  CONTENTS
 10 .bss          0000001c  20000020  20000020  00020020  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000003c  2000003c  00020020  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00020020  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00020050  2**0
                  CONTENTS, READONLY
 14 .debug_line   000000ee  00000000  00000000  00020093  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line_str 00000079  00000000  00000000  00020181  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_info   00000047  00000000  00000000  000201fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_abbrev 00000026  00000000  00000000  00020241  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00000048  00000000  00000000  00020268  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00000085  00000000  00000000  000202b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_rnglists 00000019  00000000  00000000  00020335  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  0000002c  00000000  00000000  00020350  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000020 	.word	0x20000020
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080002d8 	.word	0x080002d8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000024 	.word	0x20000024
 80001d0:	080002d8 	.word	0x080002d8

080001d4 <main>:
.text
@define text

main:

	LDR R1, =prompt
 80001d4:	4917      	ldr	r1, [pc, #92]	; (8000234 <end+0xa>)
	LDR R2, =substitutionTable
 80001d6:	4a18      	ldr	r2, [pc, #96]	; (8000238 <end+0xe>)
	MOV R8, #1
 80001d8:	f04f 0801 	mov.w	r8, #1

	BL applycipher
 80001dc:	f000 f801 	bl	80001e2 <applycipher>
	B end
 80001e0:	e023      	b.n	800022a <end>

080001e2 <applycipher>:

applycipher:

	CMP R8, #0
 80001e2:	f1b8 0f00 	cmp.w	r8, #0
	BEQ encoder
 80001e6:	d000      	beq.n	80001ea <encoder>
	B decoder
 80001e8:	e00b      	b.n	8000202 <decoder>

080001ea <encoder>:

encoder:

	LDRB R5, [R1], #1
 80001ea:	f811 5b01 	ldrb.w	r5, [r1], #1
	CMP R5, #'A'
 80001ee:	2d41      	cmp	r5, #65	; 0x41
	BLT encoder_done
 80001f0:	db06      	blt.n	8000200 <encoder_done>
	CMP R5, #'Z'
 80001f2:	2d5a      	cmp	r5, #90	; 0x5a
	BGT next_char
 80001f4:	dc13      	bgt.n	800021e <next_char>

	SUBS R5, R5, #'A'
 80001f6:	3d41      	subs	r5, #65	; 0x41
	LDRB R5, [R2,R5]
 80001f8:	5d55      	ldrb	r5, [r2, r5]
	STRB R5, [R1, #-1]!
 80001fa:	f801 5d01 	strb.w	r5, [r1, #-1]!
	B next_char
 80001fe:	e00e      	b.n	800021e <next_char>

08000200 <encoder_done>:

encoder_done:

	BX LR
 8000200:	4770      	bx	lr

08000202 <decoder>:

decoder:

	LDRB R5, [R1], #1
 8000202:	f811 5b01 	ldrb.w	r5, [r1], #1
	CMP R5, #'A'
 8000206:	2d41      	cmp	r5, #65	; 0x41
	BLT decoder_done
 8000208:	db08      	blt.n	800021c <decoder_done>
	CMP R5, #'Z'
 800020a:	2d5a      	cmp	r5, #90	; 0x5a
	BGT next_char
 800020c:	dc07      	bgt.n	800021e <next_char>


	SUBS R5, R5, #'A'
 800020e:	3d41      	subs	r5, #65	; 0x41
	CMP R5, #26
 8000210:	2d1a      	cmp	r5, #26
	BGT next_char
 8000212:	dc04      	bgt.n	800021e <next_char>

	LDRB R5, [R2, R5]
 8000214:	5d55      	ldrb	r5, [r2, r5]
	STRB R5, [R1, #-1]!
 8000216:	f801 5d01 	strb.w	r5, [r1, #-1]!
	B next_char
 800021a:	e000      	b.n	800021e <next_char>

0800021c <decoder_done>:

decoder_done:

	BX LR
 800021c:	4770      	bx	lr

0800021e <next_char>:

next_char:

	LDRB R5, [R1], #1
 800021e:	f811 5b01 	ldrb.w	r5, [r1], #1
	CMP R5, #0
 8000222:	2d00      	cmp	r5, #0
	BEQ convert_done
 8000224:	d000      	beq.n	8000228 <convert_done>
	B applycipher
 8000226:	e7dc      	b.n	80001e2 <applycipher>

08000228 <convert_done>:

convert_done:

	B convert_done
 8000228:	e7fe      	b.n	8000228 <convert_done>

0800022a <end>:

end:

	MOV R7, #1
 800022a:	f04f 0701 	mov.w	r7, #1
	MOV R0, #0
 800022e:	f04f 0000 	mov.w	r0, #0
	SVC 0
 8000232:	df00      	svc	0
	LDR R1, =prompt
 8000234:	20000000 	.word	0x20000000
	LDR R2, =substitutionTable
 8000238:	20000004 	.word	0x20000004

0800023c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800023c:	480d      	ldr	r0, [pc, #52]	; (8000274 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800023e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000240:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000244:	480c      	ldr	r0, [pc, #48]	; (8000278 <LoopForever+0x6>)
  ldr r1, =_edata
 8000246:	490d      	ldr	r1, [pc, #52]	; (800027c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000248:	4a0d      	ldr	r2, [pc, #52]	; (8000280 <LoopForever+0xe>)
  movs r3, #0
 800024a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800024c:	e002      	b.n	8000254 <LoopCopyDataInit>

0800024e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800024e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000250:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000252:	3304      	adds	r3, #4

08000254 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000254:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000256:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000258:	d3f9      	bcc.n	800024e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800025a:	4a0a      	ldr	r2, [pc, #40]	; (8000284 <LoopForever+0x12>)
  ldr r4, =_ebss
 800025c:	4c0a      	ldr	r4, [pc, #40]	; (8000288 <LoopForever+0x16>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000260:	e001      	b.n	8000266 <LoopFillZerobss>

08000262 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000262:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000264:	3204      	adds	r2, #4

08000266 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000266:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000268:	d3fb      	bcc.n	8000262 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800026a:	f000 f811 	bl	8000290 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800026e:	f7ff ffb1 	bl	80001d4 <main>

08000272 <LoopForever>:

LoopForever:
  b LoopForever
 8000272:	e7fe      	b.n	8000272 <LoopForever>
  ldr   r0, =_estack
 8000274:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000278:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800027c:	20000020 	.word	0x20000020
  ldr r2, =_sidata
 8000280:	080002f8 	.word	0x080002f8
  ldr r2, =_sbss
 8000284:	20000020 	.word	0x20000020
  ldr r4, =_ebss
 8000288:	2000003c 	.word	0x2000003c

0800028c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800028c:	e7fe      	b.n	800028c <ADC1_2_IRQHandler>
	...

08000290 <__libc_init_array>:
 8000290:	b570      	push	{r4, r5, r6, lr}
 8000292:	4d0d      	ldr	r5, [pc, #52]	; (80002c8 <__libc_init_array+0x38>)
 8000294:	4c0d      	ldr	r4, [pc, #52]	; (80002cc <__libc_init_array+0x3c>)
 8000296:	1b64      	subs	r4, r4, r5
 8000298:	10a4      	asrs	r4, r4, #2
 800029a:	2600      	movs	r6, #0
 800029c:	42a6      	cmp	r6, r4
 800029e:	d109      	bne.n	80002b4 <__libc_init_array+0x24>
 80002a0:	4d0b      	ldr	r5, [pc, #44]	; (80002d0 <__libc_init_array+0x40>)
 80002a2:	4c0c      	ldr	r4, [pc, #48]	; (80002d4 <__libc_init_array+0x44>)
 80002a4:	f000 f818 	bl	80002d8 <_init>
 80002a8:	1b64      	subs	r4, r4, r5
 80002aa:	10a4      	asrs	r4, r4, #2
 80002ac:	2600      	movs	r6, #0
 80002ae:	42a6      	cmp	r6, r4
 80002b0:	d105      	bne.n	80002be <__libc_init_array+0x2e>
 80002b2:	bd70      	pop	{r4, r5, r6, pc}
 80002b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80002b8:	4798      	blx	r3
 80002ba:	3601      	adds	r6, #1
 80002bc:	e7ee      	b.n	800029c <__libc_init_array+0xc>
 80002be:	f855 3b04 	ldr.w	r3, [r5], #4
 80002c2:	4798      	blx	r3
 80002c4:	3601      	adds	r6, #1
 80002c6:	e7f2      	b.n	80002ae <__libc_init_array+0x1e>
 80002c8:	080002f0 	.word	0x080002f0
 80002cc:	080002f0 	.word	0x080002f0
 80002d0:	080002f0 	.word	0x080002f0
 80002d4:	080002f4 	.word	0x080002f4

080002d8 <_init>:
 80002d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002da:	bf00      	nop
 80002dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002de:	bc08      	pop	{r3}
 80002e0:	469e      	mov	lr, r3
 80002e2:	4770      	bx	lr

080002e4 <_fini>:
 80002e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002e6:	bf00      	nop
 80002e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002ea:	bc08      	pop	{r3}
 80002ec:	469e      	mov	lr, r3
 80002ee:	4770      	bx	lr
